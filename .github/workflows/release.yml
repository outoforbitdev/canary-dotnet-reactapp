name: Release App
permissions: read-all
on:
  push:
    branches:
      - main
      - beta
      - dev
      - staging
jobs:
  test-image:
    runs-on: ubuntu-latest
    name: Test docker image
    outputs:
      success: $${{steps.testimage.outputs.success}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Test Docker Image
        id: testimage
        uses: outoforbitdev/action-docker-test@v1.0.0-staging.1
        with:
          test-command: sh ./tests.sh
  semantic-release:
    runs-on: ubuntu-latest
    name: Release
    needs: test-image
    if: ${{needs.test-image.outputs.success}}
    outputs:
      version: ${{steps.semanticrelease.outputs.next-version}}
      versionReleased: ${{steps.semanticrelease.outputs.versionReleased}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Semantic Release
        uses: outoforbitdev/action-semantic-release@v1.3.5
        id: semanticrelease
        with:
          github-token: ${{ secrets.RELEASE_TOKEN }}
      - name: Output version
        run: echo "Latest version is ${{ steps.semanticrelease.outputs.version}}"
  docker-publish:
    runs-on: ubuntu-latest
    name: Publish image
    needs: semantic-release
    if: ${{needs.semantic-release.outputs.versionReleased}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker Publish
        uses: outoforbitdev/action-docker-publish@v1.2.0-staging.5
        id: dockerpublish
        with:
          docker-username: ${{ secrets.DOCKER_USERNAME }}
          docker-token: ${{ secrets.DOCKER_TOKEN }}
          image-name: ${{ vars.IMAGE_NAME }}
          image-tag: ${{ needs.semantic-release.outputs.version }}
      - name: Output Tags
        run: echo "Tag is ${{steps.dockerpublish.output.sha-tag}}"
